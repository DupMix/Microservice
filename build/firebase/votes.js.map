{"version":3,"sources":["../../src/firebase/votes.js"],"names":["submitVotesToFirebase","userId","votes","date","voteFields","Object","keys","forEach","field","heardBefore","heard","submitVoteToFirebase","valueVote","trackName","score","admin","database","ref","newVote","push","set","updated_at","Date","created_at","error","console","userVotedThisWeek","user","getAllWeekVotes","thisWeeksVotes","some","child","get","snapshot","allVotes","exists","val","parsedDate","lastSunday","days","values","filter","made","log"],"mappings":"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","sourcesContent":["import admin from './admin'\nimport { isBefore, isAfter, sub, getDay, nextTuesday, nextSunday, format, parseISO } from 'date-fns'\n\nexport const submitVotesToFirebase = (userId, votes, date) => {\n  const voteFields = Object.keys(votes)\n  voteFields.forEach(field => {\n    if (field === 'heardBefore') return votes.heardBefore.forEach(heard => {\n      submitVoteToFirebase(userId, heard, 0, date)\n    })\n    submitVoteToFirebase(userId, votes[field], valueVote(field), date)\n  })\n}\n\nconst valueVote = (field) => {\n  switch (field) {\n    case 'first':\n      return 3\n    case 'second':\n      return 2\n    case 'third':\n      return 1\n    default:\n      return 0\n  }\n}\n\nconst submitVoteToFirebase = (userId, trackName, score, date) => {\n  try {\n    const votes = admin.database().ref('vote/')\n    const newVote = votes.push()\n    newVote.set({\n      userId,\n      trackName,\n      score,\n      updated_at: format(parseISO(date) || new Date(), 'yyyy-MM-dd'),\n      created_at: format(parseISO(date) || new Date(), 'yyyy-MM-dd'),\n    })\n  } catch (error) {\n    console.error(\"vote submit error:\", error)\n  }\n}\n\nexport const userVotedThisWeek = async (user, date) => {\n  try {\n    const thisWeeksVotes = await getAllWeekVotes(date)\n    if (thisWeeksVotes.some(({ userId }) => userId === user)) {\n      return true\n    } else {\n      return false\n    }\n  } catch (error) {\n    console.error('checking this weeks votes error:', error)\n  }\n}\n\nexport const getAllWeekVotes = async (date) => {\n  try {\n    const snapshot = await admin\n      .database()\n      .ref()\n      .child('vote')\n      .get()\n    const allVotes = snapshot.exists() && snapshot.val() \n    if (!allVotes) return []\n    const parsedDate = parseISO(date) // today\n    const lastSunday = sub(parsedDate, { days: getDay(parsedDate) })\n    const votes = Object.values(allVotes)\n    return votes.filter(({ created_at }) => {\n      const made = parseISO(created_at)\n      return (isAfter(made, nextTuesday(lastSunday)) && isBefore(made, nextSunday(parsedDate)))\n    })\n  } catch (error) {\n    console.log('error getting votes:', error)\n  }\n}\n\n    "],"file":"votes.js"}